# recover an RSA modulus (n) from an encryption oracle that you can encrypt
# arbitrary integers with.

# To use this encrypt the numbers 2, 3, 4 and 9 and dump the resulting ciphertext integers
# in a file like this.

# e2 is the ciphertext after encrypting integer 2.
e2 = 5761668236839586109418962761799871298496731650414300111898748436645307710082042476359004741173437011528127100544857560920828776677097827029088887542183652
# e3 is the ciphertext after encrypting integer 3.
e3 = 5231820238714732280689266704215606404198271381461642023170239572359694843155898314726071988631045294959184107152461687283534562885585607482959520219058483
# e4 is the ciphertext after encrypting integer 4.
e4 = 4549828198332848589659669808111733494496790241455507073917800676264000326179335243952552030888543259523671500474398224812218021368953866920127074319142169
# e9 is the ciphertext after encrypting integer 9.
e9 = 1687551303808596719334549069672627735326938552691428168298773374393296472674332889270931912880258672133915891879022236260158771233102485352850871404694665

# we should be able to derive n = 6176057644803740699542435800440852968215295401804934153751355359391552779158806723339253438684175344711594854501325773475294864972839236315320393819841713

# exponent - not necessary to recover n but useful in order to print out a public key.
e = 65537